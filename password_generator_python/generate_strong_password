import random
import string

def generate_strong_password(length: int) -> str:
    """
    Generates a password ensuring it contains at least one lowercase letter,
    one uppercase letter, one digit, and one symbol.
    """
    if length < 4:
        raise ValueError("Password length must be at least 4 to include all character types.")

    # 1. Guarantee at least one of each character type
    password_chars = [
        random.choice(string.ascii_lowercase),
        random.choice(string.ascii_uppercase),
        random.choice(string.digits),
        random.choice(string.punctuation)
    ]

    # 2. Fill the rest of the password length with random characters
    all_chars = string.ascii_letters + string.digits + string.punctuation
    remaining_length = length - 4
    password_chars.extend(random.choices(all_chars, k=remaining_length))

    # 3. Shuffle the list to ensure randomness
    random.shuffle(password_chars)

    # Join the list back into a string
    return ''.join(password_chars)

if __name__ == "__main__":
    try:
        # Prompt user for desired password length
        password_length = int(input("Enter password length (must be at least 4): "))
        
        # Generate and print the password using the new function
        new_password = generate_strong_password(password_length)
        print(f"\nGenerated Strong Password: {new_password}")

    except ValueError as e:
        print(f"\nError: {e}") # This will catch both non-numbers and length < 4
    except Exception as e:
        print(f"\nAn unexpected error occurred: {e}")
        